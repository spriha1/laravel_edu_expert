<?php

namespace App\Http\Controllers;

use Illuminate\Http\Request;
Use Illuminate\Support\Facades\Log;
use App\Repositories\User\UserInterface as UserInterface;
use App\User;
use Exception;

class DashboardController extends Controller
{
    protected $user;

    public function __construct(UserInterface $user)
    {
        $this->user = $user;
    }

    /**
    * 
    * @method render_admin_dashboard() 
    * 
    * @param void
    * @return string [html view of admin dashboard] 
    * Desc : This method fetches the information required on dashboard and returns the admin dashboard
    */

    public function render_admin_dashboard()
    {
    	$count = $this->user->render_admin_dashboard();
    	if ($count) {
	        return view('admin_dashboard', [
	            'regd_user_count'        => $count['regd_users'],
	            'pending_user_count'     => $count['pending_users'],
	            'shared_timesheet_count' => $count['shared_timesheets']
	        ]);
    	}

    	else {
    		abort(404);
    	}
    }

    /**
    * 
    * @method render_teacher_dashboard() 
    * 
    * @param void
    * @return string [html view of teacher dashboard] 
    * Desc : This method checks if the URL contains the query parameter for authorization code generated by stripe and if it contains that, this method connects the teacher's stripe account to the admin's stripe account and also fetches the information required on dashboard and returns the teacher dashboard
    */

    public function render_teacher_dashboard(Request $request)
    {
    	$result = $this->user->render_teacher_dashboard($request->input('code'));
        
        if ($result) {
	        return view('teacher_dashboard', [
	            'check_query_string' => $result['check_query_string'], 
	            'check'              => $result['check']
	        ]);
        }

        else {
    		abort(404);
    	}
    }

    /**
    * 
    * @method render_student_dashboard() 
    * 
    * @param void
    * @return string [html view of student dashboard] 
    * Desc : This method fetches the information required on dashboard and returns the student dashboard
    */

    public function render_student_dashboard()
    {
        return view('student_dashboard');
    }
}